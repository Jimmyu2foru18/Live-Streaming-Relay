worker_processes auto;
events { worker_connections 1024; }

rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        allow publish all;
        allow play all;

        # Main live application - receives stream from OBS
        application live {
            live on;
            record off;
            
            # Enable HLS for monitoring
            hls on;
            hls_path /tmp/hls;
            hls_fragment 3;
            hls_playlist_length 60;
            
            # Auto-push to all platforms when stream starts
            on_publish http://localhost:8080/auth;
            
            # Push to all platforms simultaneously
            push rtmp://localhost/twitch;
            push rtmp://localhost/youtube;
            push rtmp://localhost/kick;
        }

        # Twitch relay application
        application twitch {
            live on;
            record off;
            allow publish 127.0.0.1;
            deny publish all;
            
            exec ffmpeg -i rtmp://localhost/twitch/$name 
                -c:v libx264 -preset veryfast -tune zerolatency
                -b:v 6000k -maxrate 6000k -bufsize 6000k
                -pix_fmt yuv420p -g 50 -r 30
                -c:a aac -b:a 160k -ar 44100 -ac 2
                -f flv rtmp://live.twitch.tv/app/YOUR_TWITCH_KEY;
        }

        # YouTube relay application
        application youtube {
            live on;
            record off;
            allow publish 127.0.0.1;
            deny publish all;
            
            exec ffmpeg -i rtmp://localhost/youtube/$name 
                -c:v libx264 -preset veryfast -tune zerolatency
                -b:v 12000k -maxrate 12000k -bufsize 12000k
                -pix_fmt yuv420p -g 50 -r 30
                -c:a aac -b:a 160k -ar 44100 -ac 2
                -f flv rtmp://a.rtmp.youtube.com/live2/YOUR_YOUTUBE_KEY;
        }

        # Kick relay application
        application kick {
            live on;
            record off;
            allow publish 127.0.0.1;
            deny publish all;
            
            exec ffmpeg -i rtmp://localhost/kick/$name 
                -c:v libx264 -preset veryfast -tune zerolatency
                -b:v 10000k -maxrate 10000k -bufsize 10000k
                -pix_fmt yuv420p -g 50 -r 30
                -c:a aac -b:a 160k -ar 44100 -ac 2
                -f flv rtmp://fa.kick.com/app/YOUR_KICK_KEY;
        }
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 8080;
        server_name localhost;
        
        # RTMP statistics
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            add_header Access-Control-Allow-Origin *;
        }
        
        location /stat.xsl {
            root /usr/local/nginx/html;
        }
        
        # HLS playback for monitoring
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }
        
        # Simple auth endpoint
        location /auth {
            return 200;
        }
        
        # Web interface
        location / {
            root /usr/local/nginx/html;
            index index.html;
        }
    }
}
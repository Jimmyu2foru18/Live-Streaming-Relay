# StreamRelay Nginx Configuration Template
# This file is automatically generated by the StreamRelay OBS Plugin
# Do not edit manually - changes will be overwritten

worker_processes 1;
error_log logs/error.log;
pid logs/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    
    sendfile        on;
    keepalive_timeout  65;
    
    # Statistics endpoint for monitoring
    server {
        listen 8080;
        server_name localhost;
        
        location /stats {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            add_header Access-Control-Allow-Origin *;
        }
        
        location /stat.xsl {
            root html;
        }
        
        location /control {
            rtmp_control all;
            add_header Access-Control-Allow-Origin *;
        }
    }
}

rtmp {
    server {
        listen {{LOCAL_PORT}};
        chunk_size 4096;
        allow publish all;
        allow play all;
        
        # Main application - receives stream from OBS
        application live {
            live on;
            record off;
            
            # Enable statistics
            publish_notify on;
            play_notify on;
            
            # Authentication (optional)
            {{#AUTH_ENABLED}}
            on_publish http://localhost:8080/auth;
            {{/AUTH_ENABLED}}
            
            # Push to platform-specific applications
            {{#TWITCH_ENABLED}}
            push rtmp://localhost:{{LOCAL_PORT}}/twitch;
            {{/TWITCH_ENABLED}}
            
            {{#YOUTUBE_ENABLED}}
            push rtmp://localhost:{{LOCAL_PORT}}/youtube;
            {{/YOUTUBE_ENABLED}}
            
            {{#KICK_ENABLED}}
            push rtmp://localhost:{{LOCAL_PORT}}/kick;
            {{/KICK_ENABLED}}
            
            {{#CUSTOM_RTMP_ENABLED}}
            push {{CUSTOM_RTMP_URL}};
            {{/CUSTOM_RTMP_ENABLED}}
            
            # HLS output (optional)
            {{#HLS_ENABLED}}
            hls on;
            hls_path temp/hls;
            hls_fragment 3;
            hls_playlist_length 60;
            {{/HLS_ENABLED}}
            
            # Recording (optional)
            {{#RECORDING_ENABLED}}
            record all;
            record_path recordings;
            record_unique on;
            record_suffix .flv;
            {{/RECORDING_ENABLED}}
        }
        
        # Twitch application
        {{#TWITCH_ENABLED}}
        application twitch {
            live on;
            record off;
            allow publish 127.0.0.1;
            deny publish all;
            
            # Twitch-optimized transcoding
            exec ffmpeg -i rtmp://localhost:{{LOCAL_PORT}}/twitch/$name
                -c:v libx264 -preset {{QUALITY_PRESET}} -tune zerolatency
                -b:v {{TWITCH_BITRATE}}k -maxrate {{TWITCH_BITRATE}}k -bufsize {{TWITCH_BUFFER_SIZE}}k
                -pix_fmt yuv420p -g {{GOP_SIZE}} -r {{FRAMERATE}}
                -c:a aac -b:a {{AUDIO_BITRATE}}k -ar {{AUDIO_SAMPLERATE}} -ac 2
                {{CUSTOM_FFMPEG_ARGS}}
                -f flv {{TWITCH_RTMP_URL}}{{TWITCH_STREAM_KEY}}
                2>>logs/twitch_ffmpeg.log;
                
            # Restart on failure
            exec_kill_signal term;
            exec_timeout 30s;
            
            # Notifications
            on_publish http://localhost:8080/notify/twitch/start;
            on_publish_done http://localhost:8080/notify/twitch/stop;
        }
        {{/TWITCH_ENABLED}}
        
        # YouTube application
        {{#YOUTUBE_ENABLED}}
        application youtube {
            live on;
            record off;
            allow publish 127.0.0.1;
            deny publish all;
            
            # YouTube-optimized transcoding (higher bitrate)
            exec ffmpeg -i rtmp://localhost:{{LOCAL_PORT}}/youtube/$name
                -c:v libx264 -preset {{QUALITY_PRESET}} -tune zerolatency
                -b:v {{YOUTUBE_BITRATE}}k -maxrate {{YOUTUBE_BITRATE}}k -bufsize {{YOUTUBE_BUFFER_SIZE}}k
                -pix_fmt yuv420p -g {{GOP_SIZE}} -r {{FRAMERATE}}
                -c:a aac -b:a {{AUDIO_BITRATE}}k -ar {{AUDIO_SAMPLERATE}} -ac 2
                {{CUSTOM_FFMPEG_ARGS}}
                -f flv {{YOUTUBE_RTMP_URL}}{{YOUTUBE_STREAM_KEY}}
                2>>logs/youtube_ffmpeg.log;
                
            # Restart on failure
            exec_kill_signal term;
            exec_timeout 30s;
            
            # Notifications
            on_publish http://localhost:8080/notify/youtube/start;
            on_publish_done http://localhost:8080/notify/youtube/stop;
        }
        {{/YOUTUBE_ENABLED}}
        
        # Kick application
        {{#KICK_ENABLED}}
        application kick {
            live on;
            record off;
            allow publish 127.0.0.1;
            deny publish all;
            
            # Kick-optimized transcoding
            exec ffmpeg -i rtmp://localhost:{{LOCAL_PORT}}/kick/$name
                -c:v libx264 -preset {{QUALITY_PRESET}} -tune zerolatency
                -b:v {{KICK_BITRATE}}k -maxrate {{KICK_BITRATE}}k -bufsize {{KICK_BUFFER_SIZE}}k
                -pix_fmt yuv420p -g {{GOP_SIZE}} -r {{FRAMERATE}}
                -c:a aac -b:a {{AUDIO_BITRATE}}k -ar {{AUDIO_SAMPLERATE}} -ac 2
                {{CUSTOM_FFMPEG_ARGS}}
                -f flv {{KICK_RTMP_URL}}{{KICK_STREAM_KEY}}
                2>>logs/kick_ffmpeg.log;
                
            # Restart on failure
            exec_kill_signal term;
            exec_timeout 30s;
            
            # Notifications
            on_publish http://localhost:8080/notify/kick/start;
            on_publish_done http://localhost:8080/notify/kick/stop;
        }
        {{/KICK_ENABLED}}
        
        # Custom RTMP application
        {{#CUSTOM_RTMP_ENABLED}}
        application custom {
            live on;
            record off;
            allow publish 127.0.0.1;
            deny publish all;
            
            # Custom RTMP transcoding
            exec ffmpeg -i rtmp://localhost:{{LOCAL_PORT}}/custom/$name
                -c:v libx264 -preset {{QUALITY_PRESET}} -tune zerolatency
                -b:v {{CUSTOM_BITRATE}}k -maxrate {{CUSTOM_BITRATE}}k -bufsize {{CUSTOM_BUFFER_SIZE}}k
                -pix_fmt yuv420p -g {{GOP_SIZE}} -r {{FRAMERATE}}
                -c:a aac -b:a {{AUDIO_BITRATE}}k -ar {{AUDIO_SAMPLERATE}} -ac 2
                {{CUSTOM_FFMPEG_ARGS}}
                -f flv {{CUSTOM_RTMP_FULL_URL}}
                2>>logs/custom_ffmpeg.log;
                
            # Restart on failure
            exec_kill_signal term;
            exec_timeout 30s;
            
            # Notifications
            on_publish http://localhost:8080/notify/custom/start;
            on_publish_done http://localhost:8080/notify/custom/stop;
        }
        {{/CUSTOM_RTMP_ENABLED}}
    }
}

# Template variables that will be replaced:
# {{LOCAL_PORT}} - Local RTMP port (default: 1935)
# {{QUALITY_PRESET}} - FFmpeg preset (ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, veryslow)
# {{TWITCH_ENABLED}} - Enable Twitch streaming (true/false)
# {{YOUTUBE_ENABLED}} - Enable YouTube streaming (true/false)
# {{KICK_ENABLED}} - Enable Kick streaming (true/false)
# {{CUSTOM_RTMP_ENABLED}} - Enable custom RTMP streaming (true/false)
# {{HLS_ENABLED}} - Enable HLS output (true/false)
# {{RECORDING_ENABLED}} - Enable local recording (true/false)
# {{AUTH_ENABLED}} - Enable stream authentication (true/false)
# {{TWITCH_STREAM_KEY}} - Twitch stream key
# {{YOUTUBE_STREAM_KEY}} - YouTube stream key
# {{KICK_STREAM_KEY}} - Kick stream key
# {{CUSTOM_RTMP_URL}} - Custom RTMP URL
# {{CUSTOM_RTMP_FULL_URL}} - Full custom RTMP URL with key
# {{TWITCH_BITRATE}} - Twitch video bitrate in kbps
# {{YOUTUBE_BITRATE}} - YouTube video bitrate in kbps
# {{KICK_BITRATE}} - Kick video bitrate in kbps
# {{CUSTOM_BITRATE}} - Custom RTMP video bitrate in kbps
# {{TWITCH_BUFFER_SIZE}} - Twitch buffer size in kbps
# {{YOUTUBE_BUFFER_SIZE}} - YouTube buffer size in kbps
# {{KICK_BUFFER_SIZE}} - Kick buffer size in kbps
# {{CUSTOM_BUFFER_SIZE}} - Custom RTMP buffer size in kbps
# {{GOP_SIZE}} - Group of Pictures size (keyframe interval)
# {{FRAMERATE}} - Output framerate
# {{AUDIO_BITRATE}} - Audio bitrate in kbps
# {{AUDIO_SAMPLERATE}} - Audio sample rate in Hz
# {{CUSTOM_FFMPEG_ARGS}} - Additional FFmpeg arguments
# {{TWITCH_RTMP_URL}} - Twitch RTMP endpoint
# {{YOUTUBE_RTMP_URL}} - YouTube RTMP endpoint
# {{KICK_RTMP_URL}} - Kick RTMP endpoint